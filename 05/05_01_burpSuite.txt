
Разбор базового примера

Рассмотрим пример компрометации механизма аутентификации веб-приложения на примере

1. Исследуем веб-приложение на предмет наличия в нем прочих файлов и разделов.

Рассмотрим использование утилиты ffuf, используемой для обнаружения существующих путей до файлов и директорий на веб-сервере.

Для ведения перебора понадобится словарь путей, например: https://github.com/empty-jack/YAWR/blob/master/Web/files_and_directories/fuzz.txt

Укажем утилите путь до файла со словарем с помощью:

    опции -w,
    опции -u,
    целевой URL, в который необходимо поместить слово FUZZ для указания места для вставки паттернов из словаря,
    опции -fc для фильтрации кодов HTTP-ответов:

$ ffuf -w ~/Repositories/YAWR/Web/files_and_directories/fuzz.txt -u

http://evil.corp:1337/FUZZ -fc 403

Мы видим, что ffuf обнаружил следующие файлы:
см. рисунок 05_01_ffuf

С помощью браузера переходим в директорию /admin/ и обнаруживаем панель администратора:
см. рисунок 05_01_admin_panel

2. Попробуем выявить уязвимости в механизме аутентификации.

Попробуем зайти в интерфейс панели, используя логин admin и любой пароль, это нужно для дальнейшего анализа запроса в BurpSuite:
см. рисунок 05_01_BS01

Для подбора учетных данных проанализируем запрос в BurpSuite:
см. рисунок 05_01_BS02

Как видим, логин и пароль передаются в параметрах usename и password.

Ошибка, реализованная в данном механизме, заключается в том, что нет ограничения на количество попыток аутентификации.

3. Проведем атаку методом перебора.

Попробуем перебрать значение поля password используя модуль Intruder.

Intruder – модуль BurpSuite, позволяющий делать запросы, подставляя различные значения параметров по словарю и другими способами, и анализировать ответы веб-приложения, например, для поиска сообщений об ошибках и других аномалий, перебора учетных данных или поиска объектов с предсказуемыми идентификаторами.

В окне Intruder нужно выделить требующие перебора позиции в запросе, в данном случае достаточно выделить значения параметров username и password.

см. рисунок 05_01_BS03

Выберем тип атаки Cluster Bomb: эта атака повторяет различные сочетания полезных нагрузок из нескольких наборов для каждой определенной позиции. Это значит, что, если мы зададим два набора полезных нагрузок: из логинов и из паролей, то для каждого логина будут последовательно перебираться все пароли.

Перейдем на вкладку Payloads и добавим в первый Payload set имя пользователя – admin с помощью поля Add.
см. рисунок 05_01_BS04

Для перебора паролей используем словарь по ссылке:

https://github.com/empty-jack/YAWR/blob/master/brute/passwords/realyBest.txt

Скопируем и вставим пароли из списка:
см. рисунок 05_01_BS05

Запустим атаку. Видим, что если отсортировать длины запросов, то после 75 запроса с паролем admin статус 200 сменился на 303, перенаправляющий на otp.php; таким образом, первый фактор аутентификации был успешно найден.
см. рисунок 05_01_BS06

